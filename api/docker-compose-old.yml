version: '3.5'

x-base_dev: &base_dev
  image: node:13.10.1-alpine3.10
  working_dir: /usr/src/dev/
  volumes:
    - .:/usr/src/dev/
    - nodemodules:/usr/src/dev/node_modules

services:
  dev:
    <<: *base_dev
    # build:
    #   context: ./
    #   dockerfile: Dockerfile.dev
    # image: node:13.10.1-alpine3.10
    # working_dir: /usr/src/dev/
    env_file: .env
    ports:
      - 8080:8080
    # volumes:
    #   - nodemodules:/usr/src/dev/node_modules
    #   - .:/usr/src/dev/
    command: ls node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - database

  install:
    <<: *base_dev
    command: npm install

  install2:
    build:
      context: ./
      dockerfile: Dockerfile.dev
    env_file: .env
    ports:
      - 8080:8080
    command: ls node_modules

  api:
    build: .
    working_dir: /slatam/api
    env_file: .env
    ports:
      - 8080:8080
    volumes:
      - .:/slatam/api
      - nodemodules:/slatam/api/node_modules
    command: bash -c 'bin/wait_for_it database:5432 -- bin/start_prod'
    environment:
      - NODE_ENV=production
    depends_on:
      - database

  database:
    container_name: database_container
    image: postgres:12.2
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - database_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - database
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    depends_on:
      - database
    networks:
      - database
    restart: unless-stopped

networks:
  database:
    driver: bridge

volumes:
  database_data:
  pgadmin:
  nodemodules:
